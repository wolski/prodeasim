---
title: "PlayWithSim"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Quarto


```{r}
library(tidyverse)

Nprot <- 1000
# this generates protein ID's

proteins <- stringi::stri_rand_strings(Nprot,5)

# assume that number of pepeptides per protein follows a exponential distribution.
probability_of_success <- 0.3
tmp <- rgeom(n = Nprot, probability_of_success) + 1
prot <- data.frame(
  proteinID = proteins,
  nrPeptides = tmp,
  FC = rep(c(-1,0,1), c(100,800,100)),
  sd = rep(1, Nprot),
  AvgAbd = rlnorm(Nprot,log(20),20/100)
)

prot <- prot |> dplyr::mutate(mean_A = 0 - FC, N_A = 4, mean_B = 0, N_B = 4)


result_df <- prot |> uncount(nrPeptides)
result_df$peptideID <- stringi::stri_rand_strings(sum(prot$nrPeptides),5)
res2 <- result_df |> pivot_longer(cols = starts_with(c("mean", "N_")),names_to = "group" , values_to = "mean")

res2 <-  res2 |> tidyr::separate(group, c("what", "group"))
res2 <- res2 |> pivot_wider(names_from = "what", values_from = mean)

dim(res2)

sample_from_normal <- function(mean, var, n) {
  rnorm(n, mean, sqrt(var))
}

res2
sampled_data <- mapply(sample_from_normal, res2$mean, res2$sd, res2$N)
sampled_data <- as.data.frame(t(sampled_data))

x <- bind_cols(res2,sampled_data)
View(x)
peptideAbudances <- x |> pivot_longer(starts_with("V"), names_to = "Replicate", values_to = "abundance")



```

